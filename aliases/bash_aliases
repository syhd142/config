#!/bin/bash

############
#  format  #
############
#alias name=value
#alias name='command'
#alias name='command arg1 arg2'
#alias name='/path/to/script'
#alias name='/path/to/script.pl arg1'
#unalias aliasname

alias vi="vim"
#分屏同时打开多个文件
#vim -oN filea fileb filec  
vo(){
   vim -O$# $*
}
alias grep="grep -nE --color"
alias egrep="egrep --color=auto"
alias fgrep="fgrep --color=auto"
alias mkdir="mkdir -pv"
alias cp='cp -v'
alias cpr='cp -r'
alias mv='mv -v'
alias chmod='chmod -v --preserve-root'
alias chown='chown -v --preserve-root'
alias chgrp='chgrp -v --preserve-root'
alias df="df -h"
alias du="du -h"
alias last="last -a"
alias free='free -m'
alias lftp="lftp user:pwd@ftpip"
alias bc='bc -l'

#chdir
alias ..="cd .."
alias cdd="cd .."
alias cd..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias .4='cd ../../../../'
alias .5='cd ../../../../..'
alias -- -='cd -'

alias cds='echo "`pwd`" > ~/.cdsave'  #cd save : save where i am
alias cdb='cd "`cat ~/.cdsave`"'  # cd back

#short cut
alias gu='iconv -f gbk -t utf-8'  #两种类型编码转换
alias ug='iconv -f utf-8 -t gbk'
alias ssh='ssh -2'

alias svim="sudo vim"      #用sudo编辑文件时
alias vdiff='vimdiff'  #vim diff两个文件
alias tailf='tail -f'  #动态查看文件变化
alias t100='tail -n 100'
alias af="awk -F '\t' '{print NF}'"   #查看文件列数，用\t分隔，最常用，其实也可以搞个通用的，接收参数
alias wl='wc -l'    #统计行数
alias hpwd='echo -n "`hostname`:";eval pwd'  #用scp时，展示hostname和pwd

alias c="clear"   #清屏
alias cls="clear"   #清屏
alias dus="du -s"   #磁盘
alias du0="du --max-depth=0"
alias du1="du --max-depth=1"

#alias ll='ls -al --color=tty'   #ls相关，这里--color需要根据终端设
#alias lx='ls -lhBX --color=auto'        #sort by extension
#alias lz='ls -lhrS --color=auto'        #sort by size
#alias lt='ls -lhrt --color=auto'        #sort by date    最常用到，ls -rt，按修改时间查看目录下文件

#for mac
alias ll='ls -l'   #ls相关，这里--color需要根据终端设
alias lx='ls -lhBX'        #sort by extension
alias lz='ls -lhrS'        #sort by size
alias lt='ls -lhrt'        #sort by date    最常用到，ls -rt，按修改时间查看目录下文件

alias lsd='find . -maxdepth 1 -type d | sort'   #列出所有目录

export OS=`uname`
if [ $OS = "Linux" ]; then
    alias ls='ls --color -F'
else
    alias ls='ls -GF'
fi

alias pong='ping -c 5 '   #ping，限制
alias ports='netstat -tulanp'
alias dfind='find -type d -name'  #查找文件夹
alias ffind='find -type f -name'  #查找文件
alias psg='ps -ef|grep'   #查看
alias meminfo='free -m -l -t'
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4'

alias now='date +"%Y-%m-%d %T"'

#make a trash for linux
mkdir -p ~/.trash
alias rmr=trash 
alias rl='ls ~/.trash'
alias ur=undelfile
trash()
{
     mv $@ ~/.trash/
}
undelfile()
{
      mv -i  ~/.trash/$@ ./
}
cleartrash()
{
      read -p "clear sure?[n]" confirm
      [ $confirm == 'y' ] || [ $confirm == 'Y' ]  && \rm -rf ~/.trash/* && echo "Clean trash success!"
}

#new def func
calc(){
   echo "$*" | bc
}

#根据文件类型解压
extract(){
if [ -f $1 ]; then
         case $1 in
             *.tar.bz2)   tar xjf $1        ;;
             *.tar.gz)    tar xzf $1     ;;
             *.bz2)       bunzip2 $1       ;;
             *.rar)       unrar e $1     ;;
             *.gz)        gunzip $1     ;;
             *.tar)       tar xf $1        ;;
             *.tbz2)      tar xjvf $1      ;;
             *.tgz)       tar xzvf $1       ;;
             *.zip)       unzip $1     ;;
             *.Z)         uncompress $1  ;;
             *.7z)        7z x $1    ;;
             *)           echo "'$1' cannot be extracted via extract()" ;;
         esac
else
         echo "'$1' is not a valid file"
fi
}

#压缩 
mktar(){ tar cvf  "${1%%/}.tar"     "${1%%/}/"; }
mktgz(){ tar cvzf "${1%%/}.tar.gz"  "${1%%/}/"; }
mktbz(){ tar cvjf "${1%%/}.tar.bz2" "${1%%/}/"; }

#挪到回收站.....
#move to trash
del(){
    mv "$@" "~/.trash/"
}

#查看自己常用命令top n
# View most commonly used commands. depends on your history output format
used(){
if [ $1 ]
then
    history | awk '{print $4}' | sort | uniq -c | sort -nr | head -n $1
else
    history | awk '{print $4}' | sort | uniq -c | sort -nr | head -n 10
fi
}

#最常用，复制一个路径过来时，不用修改，可以到达路径的最深一层目录
#if dir,cd into it. if file ,cd into where the file is
goto(){ [ -d "$1" ] && cd "$1" || cd "$(dirname "$1")"; } 
